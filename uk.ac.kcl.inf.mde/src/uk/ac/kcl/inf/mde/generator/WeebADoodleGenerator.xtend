// generated by Xtext 2.29.0
package uk.ac.kcl.inf.mde.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import uk.ac.kcl.inf.mde.weebADoodle.Board
import uk.ac.kcl.inf.mde.weebADoodle.Scene
import uk.ac.kcl.inf.mde.weebADoodle.Character
import uk.ac.kcl.inf.mde.weebADoodle.SceneObject
import uk.ac.kcl.inf.mde.weebADoodle.Setting

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class WeebADoodleGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val model = resource.contents.head as Board
		fsa.generateFile("storyboard.txt", model.doGenerateTxt)
		fsa.generateFile("storyboard.html", model.doGenerateHTML)

	}

	def derivateTargetFileNameFor(Board model, Resource resource) {
		resource.URI.appendFileExtension('txt').lastSegment
	}

	def String doGenerateTxt(Board m) '''
		
			Number of Scenes: «m.eAllContents.filter(Scene).size()»
			Number of Characters: «m.eAllContents.filter(Character).size()»
			Number of Objects: «m.eAllContents.filter(SceneObject).size()»
			
			«FOR scene : m.eAllContents.toIterable.filter(Scene)»
				«scene.name» «scene.value»
				«scene.background»
				«scene.settings.description.description»
				«scene.settings.camera.cameraShot» «scene.settings.camera.cameraAngle»
				«scene.settings.lighting.source» «scene.settings.lighting.direction»
				
				«FOR character : scene.characters»
					«character.name» «character.value»
					«character.action.action»
					«character.position.position»
					«character.dialogue.dialogue»
					«character.description.description»
				«ENDFOR»
				
				«FOR object: scene.objects»
					«object.name» «object.value»
					«object.position.position»
					«object.description.description»
				«ENDFOR»
			«ENDFOR»
	'''

	def String doGenerateHTML(Board m) '''
		<!doctype html>
		<html lang="en">
			<head>
			   	<meta charset="utf-8">
			   	<meta name="viewport" content="width=device-width, initial-scale=1">
			   	<title>Bootstrap demo</title>
			   	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-aFq/bzH65dt+w6FI2ooMVUpc+21e0SRygnTpmBvdBgSdnuTN7QbdgL+OapgHtvPp" crossorigin="anonymous">
			 	</head>
				<body>
					«FOR scene : m.eAllContents.toIterable.filter(Scene)»
						<div class="card" style="width: 18rem;">
						   <div class="card-header">«scene.name» «scene.value»</div>
						   <svg width="100" height="100">
						     <rect x="10" y="10" width="80" height="80" />
						   </svg>
						   <div class="card-body">
						      <h5 class="card-title">Card title</h5>
						      <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
						   </div>
						   <ul class="list-group list-group-flush">
						      <li class="list-group-item">An item</li>
						      <li class="list-group-item">A second item</li>
						      <li class="list-group-item">A third item</li>
						   </ul>
						   <div class="card-body">
						   </div>
						</div>
				«ENDFOR»
				<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js" integrity="sha384-qKXV1j0HvMUeCBQ+QVp7JcfGl760yU08IQ+GpUo5hlbpg51QRiuqHAJz8+BrxE/N" crossorigin="anonymous"></script>
				</body>
			</html>
	'''

}
